import math

#Υλοποιούμε τον Αλγόριθμο 10.1.2 ο οποίος μας επιστρέφει έναν μη τετριμμένος διαιρέτης του n
def FERMAT(n):
    for a in range(int( n ** (1/2)), (n//9)+6):
        b = (a ** 2 - n) ** (1/2)
        if int(b.real) == b:
            return math.gcd( a-int(b), n)

N = 11413
e = 19
C = (3203, 909, 3143, 5255, 5343, 3203, 909, 9958, 5278, 5343, 9958, 5278, 4674, 909, 9958, 792, 909, 4132, 3143, 9958, 3203, 5343, 792, 3143, 4443)

#Για να βρούμε την Φ(Ν) θα πρέπει να βρούμε δυο αριθμούς p,q που είναι παραγοντοποιήσει του N
p = FERMAT(N)
q = N//p
F = (p - 1) * (q - 1)


#Για να βρούμε το ιδιωτικό κλειδί d θα πρέπει να ικανοποιείται ο τύπος e*d=K*Φ(Ν)+1 και ο αριθμός d θα πρέπει να είναι ακέραιος
k=0
while(True):
    d = ((k * F) + 1) / e
    if (int(d) == d):
        d = int(d)
        break;
    k += 1
print(d)

#Αποκρυπτογραφήσει του μηνύματος με τον τύπο C^d mod(N) και αντιστοίχιση του αποτελέσματος στον πίνακα ASCII
M=[]
for i in range(len(C)):
    temp = (C[i] ** d) % N
    M.append(chr(temp))
print(M)
